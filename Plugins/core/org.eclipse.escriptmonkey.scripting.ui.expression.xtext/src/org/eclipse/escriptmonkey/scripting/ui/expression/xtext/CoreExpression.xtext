// automatically generated by Xtext
grammar org.eclipse.escriptmonkey.scripting.ui.expression.xtext.CoreExpression with org.eclipse.xtext.common.Terminals

import "http://coreexpression/1.0" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Root returns Root:
	'['expression=Expression']';

Expression returns Expression:
	InstanceExpression | AndExpression | OrExpresison | NotExpression | IterableExpression | WithExpression | AdaptExpression | EqualExpression;

CompositeExpression returns CompositeExpression:
	AndExpression | OrExpresison | NotExpression | IterableExpression | AdaptExpression;

InstanceExpression returns InstanceExpression:
	'InstanceOf'value=STRING;

AndExpression returns AndExpression:
	{AndExpression}
	'And'
	'{'
		(expressions+=Expression ( "," expressions+=Expression)* )?
	'}';

OrExpresison returns OrExpresison:
	{OrExpresison}
	'Or'
	'{'
		( expressions+=Expression ( "," expressions+=Expression)* )?
	'}';

NotExpression returns NotExpression:
	{NotExpression}
	'Not'
	'{'
		(expressions+=Expression ( "," expressions+=Expression)* )?
	'}';

IterableExpression returns IterableExpression:
	{IterableExpression}
	(ifEmpty?='ifEmpty')?
	'Iterable' ('operator' operand=Operator)?
	'{'
		(expressions+=Expression ( "," expressions+=Expression)*)?
	'}';

WithExpression returns WithExpression:
	'With' variable=Variable
	'{'
		(expressions+=Expression ( "," expressions+=Expression)*)?
	'}';

AdaptExpression returns AdaptExpression:
	'AdaptTo'value=STRING
	'{'
		(expressions+=Expression ( "," expressions+=Expression)*)?
	'}';

EqualExpression returns EqualExpression:
	'Equal' value=STRING;



Operator returns Operator:
	'and' | 'or';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

Variable returns Variable:
	"activeContexts" |"activeEditor" | "activeEditorId" | "activePartId" | "activeSite" | "selection";
